# This pipeline:
# * Deploys the training ML pipeline as a published pipeline
# * Runs a small test training dataset through it for ensuring full functionality of the deployed ML pipeline
# * Publishes it as a new Pipeline Endpoint or adds it as default to an existing Pipeline Endpoint

trigger:
- master

pool:
  vmImage: 'Ubuntu-20.04'

variables:
  resourcegroup: 'aml-demo'
  workspace: 'aml-demo'
  aml_compute_target: 'cpu-cluster'
  pipeline_name: 'training-pipeline'
  pipeline_endpoint_name: 'training-pipeline-endpoint'
  dataset: 'german-credit-dataset'
  dataset_test: 'german-credit-ci-test' # Dataset used for testing the training pipeline

  # Azure Resource Manager connection created during pipeline creation
  azure_service_connection_name: 'aml_accelarator_svc_conn'

steps:
- task: UsePythonVersion@0
  displayName: 'Setting Python version'
  inputs:
    versionSpec: '3.6'

- task: Bash@3
  displayName: 'Install Requirements'
  inputs:
    filePath: automation/install_requirements.sh

- task: AzureCLI@2
  displayName: 'Install the CLI'
  inputs:
    azureSubscription: '$(azure_service_connection_name)'
    scriptLocation: inlineScript
    scriptType: bash
    inlineScript: |
      az extension add -n azure-cli-ml

- task: AzureCLI@2
  displayName: 'Attach folder to workspace'
  inputs:
    azureSubscription: '$(azure_service_connection_name)'
    scriptLocation: inlineScript
    scriptType: bash
    inlineScript: |
      az ml folder attach -w $(workspace) -g $(resourcegroup)

- task: AzureCLI@2
  displayName: 'Create AML Compute Target'
  inputs:
    azureSubscription: '$(azure_service_connection_name)'
    scriptLocation: inlineScript
    scriptType: bash
    inlineScript: |
      az ml computetarget create amlcompute -n $(aml_compute_target) --min-nodes 0 --max-nodes 1 -s STANDARD_D3_V2

- task: AzureCLI@2
  displayName: 'Deploy pipeline to AML'
  inputs:
    azureSubscription: '$(azure_service_connection_name)'
    scriptLocation: inlineScript
    scriptType: bash
    inlineScript: |
      python pipelines-python/train/pipeline.py --pipeline_name=$(pipeline_name) --build_number=$(Build.BuildNumber) --dataset=$(dataset) --runconfig=$(Build.SourcesDirectory)/pipelines-python/train/pipeline.runconfig --source_directory=$(Build.SourcesDirectory)/models/model1

- task: AzureCLI@2
  displayName: 'Test training pipeline functionally with small training dataset'
  inputs:
    azureSubscription: '$(azure_service_connection_name)'
    scriptLocation: inlineScript
    scriptType: bash
    inlineScript: |
      export PIPELINE_ID=$(pipeline_id)
      export DATASET_NAME=$(dataset_test)
      pytest --junitxml=junit/TEST-training-pipeline.xml pipelines-python/train/

- task: PublishTestResults@2
  displayName: 'Publish test results from pipeline test run'
  inputs:
    testRunTitle: 'Test results for published pipeline'

- task: AzureCLI@2
  displayName: 'Add pipeline to Pipeline Endpoint'
  inputs:
    azureSubscription: '$(azure_service_connection_name)'
    scriptLocation: inlineScript
    scriptType: bash
    inlineScript: |
      python pipelines-python/train/publish_to_endpoint.py --pipeline_id=$(pipeline_id) --pipeline_endpoint_name=$(pipeline_endpoint_name)
