trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  resourcegroup: 'mlops-quickstart'
  workspace: 'mlops-quickstart'
  experiment: 'aml-accelerator-exp'
  aml_compute_target: 'cpu-cluster'
  model_name: 'aml-accelerator'
  image_name: 'aml-accelerator-image'
  dataset: 'german-credit-dataset'
  dataset_mountpath: '/data'
  
  # Azure Resource Manager connection created during pipeline creation
  azureServiceConnectionId: 'aml_accelarator_svc_conn'

steps:

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.6'
    architecture: 'x64'   

- task: Bash@3
  displayName: 'Install Requirements'
  inputs:
    targetType: filePath
    filePath: 'automation/install_requirements.sh'
    workingDirectory: 'automation'

- task: AzureCLI@1
  displayName: 'Install the CLI'
  inputs:
    azureSubscription: '$(azureServiceConnectionId)'
    scriptLocation: inlineScript
    inlineScript: 'az extension add -n azure-cli-ml'

- task: AzureCLI@1
  displayName: 'Attach folder to workspace'
  inputs:
    azureSubscription: '$(azureServiceConnectionId)'
    scriptLocation: inlineScript
    inlineScript: 'az ml folder attach -e $(experiment) -w $(workspace) -g $(resourcegroup) --path $(Build.SourcesDirectory)'

- task: AzureCLI@1
  displayName: 'Get or create AML Compute Target'
  inputs:
    azureSubscription: '$(azureServiceConnectionId)'
    scriptLocation: inlineScript
    inlineScript: 'az ml computetarget create amlcompute -n $(aml_compute_target) --min-nodes 1 --max-nodes 1 -s STANDARD_D3_V2'

- task: AzureCLI@1
  displayName: 'Master Pipeline'
  inputs:
    azureSubscription: '$(azureServiceConnectionId)'
    scriptLocation: inlineScript
    inlineScript: 'python  $(Build.SourcesDirectory)/pipelines-python/train/pipeline.py 
    --model_name=$(model_name) --build_number=$(Build.BuildNumber) --image_name=aml-accelerator-img --dataset=$(dataset) --dataset_mountpath=$(dataset_mountpath) --runconfig=$(Build.SourcesDirectory)/pipelines-python/train/pipeline.runconfig --source_directory=$(Build.SourcesDirectory)/src/model1 --path=$(Build.SourcesDirectory)'

- task: CopyFiles@2
  displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    Contents: '**'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: $(model_name)'
  inputs:
    ArtifactName: '$(model_name)'
    publishLocation: 'container'
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
    TargetPath: '$(Build.ArtifactStagingDirectory)'
